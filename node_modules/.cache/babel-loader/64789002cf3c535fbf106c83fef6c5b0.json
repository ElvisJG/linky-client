{"ast":null,"code":"var _jsxFileName = \"/Users/elvisjg/Documents/Projects/linky-client/src/App.js\";\nimport React, { useEffect, useReducer } from \"react\";\nimport io from \"socket.io-client\";\nimport { useForm } from \"react-hook-form\";\nimport Preview from \"./components/Preview\";\nimport ConnectedTo from \"./components/ConnectedTo\"; // const socket = io(`http://localhost:${process.env.PORT || 4321}`);\n\nconst socket = io(`https://linky-server.herokuapp.com/`);\nconst initialState = {\n  connected: false,\n  stream: undefined,\n  latest: undefined,\n  links: []\n};\n\nfunction reducer(state = initialState, action = {\n  type: \"undefined\"\n}) {\n  switch (action.type) {\n    case \"SET_STREAM\":\n      {\n        return { ...state,\n          stream: action.payload\n        };\n      }\n\n    case \"ADD_LINK\":\n      {\n        return { ...state,\n          latest: action.payload,\n          links: state.latest ? [state.latest, ...state.links] : state.links\n        };\n      }\n\n    case \"SET_CONNECTED\":\n      {\n        return { ...state,\n          connected: true\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nconst App = () => {\n  const [{\n    connected,\n    stream,\n    latest,\n    links: meta\n  }, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    fetch(\"https://linky-server.herokuapp.com/\").then(() => {\n      dispatch({\n        type: \"SET_CONNECTED\"\n      });\n    });\n  }, []);\n  const {\n    handleSubmit,\n    register\n  } = useForm();\n\n  const onSubmit = values => {\n    dispatch({\n      type: \"SET_STREAM\",\n      payload: values.channel\n    });\n  };\n\n  useEffect(() => {\n    if (stream !== undefined) {\n      socket.emit(\"channel\", stream);\n    }\n  }, [stream]);\n\n  const handleMetaData = link => {\n    dispatch({\n      type: \"ADD_LINK\",\n      payload: link\n    });\n  };\n\n  useEffect(() => {\n    socket.on(\"message\", handleMetaData);\n    return () => socket.off(handleMetaData);\n  }, []);\n\n  if (!connected) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"...Loading\")));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Twitch Links\"), !stream ? /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"channel\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Submit\")) : /*#__PURE__*/React.createElement(ConnectedTo, {\n    stream: stream,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Preview, {\n    meta: meta,\n    stream: stream,\n    latest: latest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/elvisjg/Documents/Projects/linky-client/src/App.js"],"names":["React","useEffect","useReducer","io","useForm","Preview","ConnectedTo","socket","initialState","connected","stream","undefined","latest","links","reducer","state","action","type","payload","App","meta","dispatch","fetch","then","handleSubmit","register","onSubmit","values","channel","emit","handleMetaData","link","on","off"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport io from \"socket.io-client\";\nimport { useForm } from \"react-hook-form\";\nimport Preview from \"./components/Preview\";\nimport ConnectedTo from \"./components/ConnectedTo\";\n// const socket = io(`http://localhost:${process.env.PORT || 4321}`);\nconst socket = io(`https://linky-server.herokuapp.com/`);\n\nconst initialState = {\n  connected: false,\n  stream: undefined,\n  latest: undefined,\n  links: [],\n};\n\nfunction reducer(state = initialState, action = { type: \"undefined\" }) {\n  switch (action.type) {\n    case \"SET_STREAM\": {\n      return {\n        ...state,\n        stream: action.payload,\n      };\n    }\n    case \"ADD_LINK\": {\n      return {\n        ...state,\n        latest: action.payload,\n        links: state.latest ? [state.latest, ...state.links] : state.links,\n      };\n    }\n    case \"SET_CONNECTED\": {\n      return {\n        ...state,\n        connected: true,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nconst App = () => {\n  const [{ connected, stream, latest, links: meta }, dispatch] = useReducer(\n    reducer,\n    initialState\n  );\n  useEffect(() => {\n    fetch(\"https://linky-server.herokuapp.com/\").then(() => {\n      dispatch({ type: \"SET_CONNECTED\" });\n    });\n  }, []);\n\n  const { handleSubmit, register } = useForm();\n\n  const onSubmit = (values) => {\n    dispatch({ type: \"SET_STREAM\", payload: values.channel });\n  };\n\n  useEffect(() => {\n    if (stream !== undefined) {\n      socket.emit(\"channel\", stream);\n    }\n  }, [stream]);\n\n  const handleMetaData = (link) => {\n    dispatch({ type: \"ADD_LINK\", payload: link });\n  };\n\n  useEffect(() => {\n    socket.on(\"message\", handleMetaData);\n    return () => socket.off(handleMetaData);\n  }, []);\n\n  if (!connected) {\n    return (\n      <div className=\"app\">\n        <div className=\"search\">\n          <h1>...Loading</h1>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"search\">\n        <h1>Twitch Links</h1>\n        {!stream ? (\n          <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\n            <input name=\"channel\" ref={register} />\n            <button type=\"submit\">Submit</button>\n          </form>\n        ) : (\n          <ConnectedTo stream={stream} />\n        )}\n      </div>\n      <Preview meta={meta} stream={stream} latest={latest} />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}